var documenterSearchIndex = {"docs":
[{"location":"api/","page":"High-level API reference","title":"High-level API reference","text":"CurrentModule = JustSayIt","category":"page"},{"location":"api/#High-level-API-reference","page":"High-level API reference","title":"High-level API reference","text":"","category":"section"},{"location":"api/","page":"High-level API reference","title":"High-level API reference","text":"This is the official High-level API reference of JustSayIt. Note that it can also be queried interactively from the Julia REPL using the help mode:","category":"page"},{"location":"api/","page":"High-level API reference","title":"High-level API reference","text":"julia> using JustSayIt\njulia>?\nhelp?> JustSayIt.API","category":"page"},{"location":"api/#Submodule","page":"High-level API reference","title":"Submodule","text":"","category":"section"},{"location":"api/","page":"High-level API reference","title":"High-level API reference","text":"JustSayIt.API","category":"page"},{"location":"api/#JustSayIt.API","page":"High-level API reference","title":"JustSayIt.API","text":"Module API\n\nApplication Programming Interface (API) of JustSayIt.\n\nMacros\n\n@voiceargs\n\nFunctions\n\nis_next\nare_next\npause_recording\nrestart_recording\n\nConstants\n\nLANG\nMODELNAME\n\nTo see a description of a function, macro or module type ?<functionname>, ?<macroname> (including the @) or ?<modulename>, respectively.\n\n\n\n\n\n","category":"module"},{"location":"api/#Macros","page":"High-level API reference","title":"Macros","text":"","category":"section"},{"location":"api/#Index","page":"High-level API reference","title":"Index","text":"","category":"section"},{"location":"api/","page":"High-level API reference","title":"High-level API reference","text":"JustSayIt.API.@voiceargs","category":"page"},{"location":"api/#Documentation","page":"High-level API reference","title":"Documentation","text":"","category":"section"},{"location":"api/","page":"High-level API reference","title":"High-level API reference","text":"JustSayIt.API.@voiceargs","category":"page"},{"location":"api/#JustSayIt.@voiceargs","page":"High-level API reference","title":"JustSayIt.@voiceargs","text":"@voiceargs args function\n\nDeclare some or all arguments of the function definition to be arguments that can be obtained by voice.\n\nArguments\n\nargs: a voicearg, a pair voicearg=>kwargs or a tuple with multiple voiceargs, which can each have kwargs or not (see examples below).\nfunction: the function definition.\n\nnote: Keyword arguments definable for each voice argument in `args`\nmodel::String=MODELNAME.DEFAULT.<default_language>: the name of the model to be used for the function argument (the name must be one of the keys of the modeldirs dictionary passed to init_jsi).\nvalid_input::AbstractArray{String}|NTuple{N,Pair{String,<:AbstractArray{String}}}: the valid speech input (e.g. [\"up\", \"down\"] or (\"de\" => [\"rauf\", \"runter\"], \"en-us\" => [\"up\", \"down\"], \"fr\" => [\"haut\", \"bas\"], \"es\" => [\"arriba\", \"abajo\"])).\nvalid_input_auto::Bool: whether the valid speech input can automatically be derived from the type of the function argument.\ninterpret_function::Function: a function to interpret the token (mapping a String to a different String).\nuse_max_speed::Bool=false: whether to use maxium speed for the recognition of the next token (rather than maximum accuracy). It is generally only recommended to set use_max_speed=true for single word commands or very specfic use cases that require immediate minimal latency action when a command is said.\nignore_unknown::Bool=false: whether to ignore unknown tokens in the speech (and consume the next instead). It is generally not recommended to set ignore_unkown=true - in particular not in combination with a limited valid input - as then the function will block until it receives a token it recognizes.\nvararg_end::String: a token to signal the end of a vararg (only valid if the function argument is a vararg).\nvararg_max::Integer=âˆž: the maximum number of arguments the vararg can contain (only valid if the function argument is a vararg).\nvararg_timeout::AbstractFloat: timeout after which to abort waiting for a next token to be spoken (only valid if the function argument is a vararg).\n\nExamples\n\n@voiceargs (b, c) function f(a, b::String, c::String, d)\n    #(...)\n    return\nend\n\n@voiceargs (b=>(use_max_speed=true), c) function f(a, b::String, c::String, d)\n    #(...)\n    return\nend\n\n@enum TypeMode words formula\n@voiceargs (mode=>(valid_input_auto=true), token=>(model=MODELNAME.TYPE.EN_US, vararg_timeout=2.0)) function type_tokens(mode::TypeMode, tokens::String...)\n    #(...)\n    return\nend\n\n\n\n\n\n","category":"macro"},{"location":"api/#Functions","page":"High-level API reference","title":"Functions","text":"","category":"section"},{"location":"api/#Index-2","page":"High-level API reference","title":"Index","text":"","category":"section"},{"location":"api/","page":"High-level API reference","title":"High-level API reference","text":"JustSayIt.API.is_next\nJustSayIt.API.are_next\nJustSayIt.API.pause_recording\nJustSayIt.API.restart_recording","category":"page"},{"location":"api/#Documentation-2","page":"High-level API reference","title":"Documentation","text":"","category":"section"},{"location":"api/","page":"High-level API reference","title":"High-level API reference","text":"JustSayIt.API.is_next\nJustSayIt.API.are_next\nJustSayIt.API.pause_recording\nJustSayIt.API.restart_recording","category":"page"},{"location":"api/#JustSayIt.is_next","page":"High-level API reference","title":"JustSayIt.is_next","text":"is_next(token)\n\nnote: Advanced\nis_next(token; <keyword arguments>)\n\nCheck if the next token in the speech matches token; if yes, return true, else, return false. If token is an array of strings, check if any of them matches the next token in the speech. A call to is_next does by default not consume the next token (nor fix the recognizer to be used for its recognition).\n\nArguments\n\ntoken::String | AbstractArray{String}: the token(s) to compare the next token in the speech against.\n\nnote: Advanced keyword arguments\nmodelname::String=MODELNAME.DEFAULT.<default_language>: the name of the model to be used for the recognition in the token comparison (the name must be one of the keys of the modeldirs dictionary passed to init_jsi).\nconsume_if_match::Bool=false: whether the next token is to be consumed in case of a match.\ntimeout::Float64=Inf: timeout after which to abort waiting for a next token to be spoken.\nuse_max_speed::Bool=false: whether to use maxium speed for the recognition of the next token (rather than maximum accuracy). It is generally only recommended to set use_max_speed=true for single word commands or very specfic use cases that require immediate minimal latency action when a command is said.\n\nSee also: are_next\n\n\n\n\n\n","category":"function"},{"location":"api/#JustSayIt.are_next","page":"High-level API reference","title":"JustSayIt.are_next","text":"are_next(token)\n\nnote: Advanced\nare_next(token; <keyword arguments>)\n\nCheck if the next group of tokens in the speech match token; if all match, return true, else, return false. If token is an array of strings, check if any of them match the next tokens in the speech. A call to are_next does by default not consume the next tokens (nor fix the recognizer to be used for its recognition).\n\nArguments\n\ntoken::String | AbstractArray{String}: the token(s) to compare the next token in the speech against.\n\nnote: Advanced keyword arguments\nmodelname::String=MODELNAME.DEFAULT.<default_language>: the name of the model to be used for the recognition in the token comparison (the name must be one of the keys of the modeldirs dictionary passed to init_jsi).\nconsume_if_match::Bool=false: whether the next tokens are to be consumed in case that all match.\ntimeout::Float64=Inf: timeout after which to abort waiting for a next token to be spoken.\nuse_max_speed::Bool=false: whether to use maxium speed for the recognition of the next tokens (rather than maximum accuracy). It is generally only recommended to set use_max_speed=true for single word commands or very specfic use cases that require immediate minimal latency action when a command is said.\n\nSee also: is_next\n\n\n\n\n\n","category":"function"},{"location":"api/#JustSayIt.pause_recording","page":"High-level API reference","title":"JustSayIt.pause_recording","text":"pause_recording()\n\nPause recording of the active recorder.\n\nSee also: restart_recording\n\n\n\n\n\n","category":"function"},{"location":"api/#JustSayIt.restart_recording","page":"High-level API reference","title":"JustSayIt.restart_recording","text":"restart_recording()\n\nRestart recording of the last active recorder.\n\nSee also: pause_recording\n\n\n\n\n\n","category":"function"},{"location":"api/#Constants","page":"High-level API reference","title":"Constants","text":"","category":"section"},{"location":"api/#Index-3","page":"High-level API reference","title":"Index","text":"","category":"section"},{"location":"api/","page":"High-level API reference","title":"High-level API reference","text":"JustSayIt.API.LANG\nJustSayIt.API.MODELNAME","category":"page"},{"location":"api/#Documentation-3","page":"High-level API reference","title":"Documentation","text":"","category":"section"},{"location":"api/","page":"High-level API reference","title":"High-level API reference","text":"JustSayIt.API.LANG\nJustSayIt.API.MODELNAME","category":"page"},{"location":"api/#JustSayIt.LANG","page":"High-level API reference","title":"JustSayIt.LANG","text":"Constant named tuple containing names of available languages.\n\n\n\n\n\n","category":"constant"},{"location":"api/#JustSayIt.MODELNAME","page":"High-level API reference","title":"JustSayIt.MODELNAME","text":"Constant named tuple containing modelnames for available languages.\n\n\n\n\n\n","category":"constant"},{"location":"usage/#Usage","page":"Usage","title":"Usage","text":"","category":"section"},{"location":"usage/#Fully-automatic-installation","page":"Usage","title":"Fully automatic installation","text":"","category":"section"},{"location":"usage/","page":"Usage","title":"Usage","text":"After installing Julia - if not yet installed - JustSayIt can be installed directly with the Julia package manager from the Julia REPL:","category":"page"},{"location":"usage/","page":"Usage","title":"Usage","text":"julia>]\n  pkg> add JustSayIt","category":"page"},{"location":"usage/","page":"Usage","title":"Usage","text":"All dependencies are automatically installed. Python dependencies are automatically installed in a local Miniconda environment, set up by Conda.jl. Default language models are automatically downloaded at first usage of JustSayIt.","category":"page"},{"location":"usage/#Simple-basic-software-usage","page":"Usage","title":"Simple basic software usage","text":"","category":"section"},{"location":"usage/","page":"Usage","title":"Usage","text":"The basic usage of JustSayIt is as simple as launching the Julia REPL and calling the commands using JustSayIt followed by start():","category":"page"},{"location":"usage/","page":"Usage","title":"Usage","text":"$> julia\njulia> using JustSayIt\njulia> start()","category":"page"},{"location":"usage/","page":"Usage","title":"Usage","text":"More information on customization keywords of start is given in the following subsections and in the Software reference.","category":"page"},{"location":"usage/#User-definable-mapping-of-command-names-to-functions-or-keyboard-shortcuts","page":"Usage","title":"User definable mapping of command names to functions or keyboard shortcuts","text":"","category":"section"},{"location":"usage/","page":"Usage","title":"Usage","text":"The keyword commands of start enables to freely define a mapping of command names to functions or keyboard shortcuts or sequences of those, e.g.:","category":"page"},{"location":"usage/","page":"Usage","title":"Usage","text":"# Define custom commands\nusing JustSayIt\ncommands = Dict(\"help\"      => Help.help,\n                \"type\"      => Keyboard.type,\n                \"ma\"        => Mouse.click_left,\n                \"select\"    => Mouse.press_left,\n                \"okay\"      => Mouse.release_left,\n                \"middle\"    => Mouse.click_middle,\n                \"right\"     => Mouse.click_right,\n                \"double\"    => Mouse.click_double,\n                \"triple\"    => Mouse.click_triple,\n                \"copy\"      => (Key.ctrl, 'c'),\n                \"cut\"       => (Key.ctrl, 'x'),\n                \"paste\"     => (Key.ctrl, 'v'),\n                \"undo\"      => (Key.ctrl, 'z'),\n                \"redo\"      => (Key.ctrl, Key.shift, 'z'),\n                \"upwards\"   => Key.page_up,\n                \"downwards\" => Key.page_down,\n                \"take\"      => [Mouse.click_double, (Key.ctrl, 'c')],\n                \"replace\"   => [Mouse.click_double, (Key.ctrl, 'v')],\n                );\nstart(commands=commands, max_speed_subset=[\"ma\", \"select\", \"okay\", \"middle\", \"right\", \"double\", \"triple\", \"copy\", \"upwards\", \"downwards\", \"take\"])","category":"page"},{"location":"usage/","page":"Usage","title":"Usage","text":"Note that keyboard shortcuts are given as either single keys (e.g., Key.page_up) or tuples of keys (e.g., (Key.ctrl, 'c')). Special keys are selected from those available in Key: type Key.+ tab in the Julia REPL to see the available keys (the full documentation on the available keys is available here). Character keys are simply given in single quotes (e.g., 'c').","category":"page"},{"location":"usage/","page":"Usage","title":"Usage","text":"A mapping of a command name to a sequence of commands can be defined by using as mapping target an array whose elements are functions or keyboard shortcuts (e.g., [Mouse.click_double, (Key.ctrl, 'c')]). This enables to express new complex actions without programming. In the above example, \"take\" double clicks the word below the mouse curser to select it and then copies it; \"replace\" double clicks the word below the mouse curser to select it and then replaces it.","category":"page"},{"location":"usage/","page":"Usage","title":"Usage","text":"The keyword subset of start enables to activate only a subset of the default or user-defined commands. The following example selects a subset of the default commands:","category":"page"},{"location":"usage/","page":"Usage","title":"Usage","text":"# Listen only to the commands \"help\" and \"type\".\nusing JustSayIt\nstart(subset=[\"help\", \"type\"])","category":"page"},{"location":"usage/#Per-command-choice-between-maximum-speed-or-accuracy","page":"Usage","title":"Per command choice between maximum speed or accuracy","text":"","category":"section"},{"location":"usage/","page":"Usage","title":"Usage","text":"The keyword max_speed_subset of start enables to define a subset of the commands for which the command names are to be recognized with maximum speed rather than with maximum accuracy, e.g.:","category":"page"},{"location":"usage/","page":"Usage","title":"Usage","text":"# Define custom commands\nusing JustSayIt\ncommands = Dict(\"copy\"      => (Key.ctrl, 'c'),\n                \"cut\"       => (Key.ctrl, 'x'),\n                \"paste\"     => (Key.ctrl, 'v'),\n                \"undo\"      => (Key.ctrl, 'z'),\n                \"redo\"      => (Key.ctrl, Key.shift, 'z'),\n                \"upwards\"   => Key.page_up,\n                \"downwards\" => Key.page_down,\n                );\nstart(commands=commands, max_speed_subset=[\"upwards\", \"downwards\", \"copy\"])","category":"page"},{"location":"usage/","page":"Usage","title":"Usage","text":"Forcing maximum speed is usually desired for single word commands that map to functions or keyboard shortcuts that should trigger immediate actions as, e.g., mouse clicks or, as in the above example page up/down or copy (in general, actions that do not modify content and can therefore safely be triggered at maximum speed). However, it is typically not desired for \"dangerous\" actions, like \"cut\", \"paste\", \"undo\" and \"redo\" in this example. Note that forcing maximum speed means not to wait for a certain amount of silence after the end of a command as normally done for the full confirmation of a recognition. As a result, it enables a minimal latency between the saying of a command name and its execution. Note that it is usually possible to define very distinctive command names, which allow for a safe command name to shortcut mapping at maximum speed (to be tested case by case).","category":"page"},{"location":"usage/","page":"Usage","title":"Usage","text":"Note furthermore that a good recording quality is important in order to achieve a good recognition accuracy. In particular, background noise might reduce recognition accuracy. Thus, a microphone integrated in a notebook or a webcam might potentially lead to unsatisfying accuracy, while a headset or an external microphone that is well set up should lead to good accuracy. JustSayIt relying on the Vosk Speech Recognition Toolkit, it is the latter that dictates the requirements on recording quality for good recognition accuracy (for more information, have a look at the subsection accuracy on their website).","category":"page"},{"location":"usage/#Help-on-commands-callable-by-voice","page":"Usage","title":"Help on commands callable by voice","text":"","category":"section"},{"location":"usage/","page":"Usage","title":"Usage","text":"Saying \"help commands\" lists your available commands in the Julia REPL leading to, e.g., the following output:","category":"page"},{"location":"usage/","page":"Usage","title":"Usage","text":"â”Œ Info:\nâ”‚ Your commands:\nâ”‚ copy      => ctrl + c\nâ”‚ cut       => ctrl + x\nâ”‚ double    => click_double\nâ”‚ downwards => page_down\nâ”‚ email     => email\nâ”‚ help      => help\nâ”‚ internet  => internet\nâ”‚ ma        => click_left\nâ”‚ middle    => click_middle\nâ”‚ okay      => release_left\nâ”‚ paste     => ctrl + v\nâ”‚ redo      => ctrl + shift + z\nâ”‚ right     => click_right\nâ”‚ select    => press_left\nâ”‚ triple    => click_triple\nâ”‚ type      => type\nâ”‚ undo      => ctrl + z\nâ”” upwards   => page_up","category":"page"},{"location":"usage/","page":"Usage","title":"Usage","text":"Saying \"help <command name>\", where <command name> is to be replaced with one of the available commands, shows the help for the corresponding command. Here is, e.g., the output produced when saying \"help email\":","category":"page"},{"location":"usage/","page":"Usage","title":"Usage","text":"[ Info: Starting command: help (latency: 6 ms)\nâ”Œ Info: Command email\nâ”‚    =\nâ”‚      email `inbox` | `outbox`\nâ”‚    \nâ”‚      Manage e-mails, performing one of the following actions:\nâ”‚    \nâ”‚        â€¢  open inbox\nâ”‚    \nâ””        â€¢  open outbox","category":"page"},{"location":"usage/","page":"Usage","title":"Usage","text":"Note that the submodules Email and Internet contain still very little functionality. Yet, they illustrate how submodules for all kind of operations can be programmed.","category":"page"},{"location":"usage/#Sleep-and-wake-up-by-voice","page":"Usage","title":"Sleep and wake up by voice","text":"","category":"section"},{"location":"usage/","page":"Usage","title":"Usage","text":"Saying \"sleep JustSayIt\" puts JustSayIt to sleep. It will not execute any commands until it is awoken with the words \"awake JustSayIt\".","category":"page"},{"location":"usage/#Fast-command-programming-with-voice-argument-functions","page":"Usage","title":"Fast command programming with voice argument functions","text":"","category":"section"},{"location":"usage/","page":"Usage","title":"Usage","text":"JustSayIt commands map to regular Julia functions. Function arguments can be easily passed by voice thanks to the @voiceargs macro. It allows to declare arguments in standard function definitions to be directly obtainable by voice. It, furthermore, allows to define speech recognition parameters for each voice argument as, e.g., the valid speech input. The following shows some examples:","category":"page"},{"location":"usage/","page":"Usage","title":"Usage","text":"  @voiceargs (b, c) function f(a, b::String, c::String, d)\n      #(...)\n      return\n  end","category":"page"},{"location":"usage/","page":"Usage","title":"Usage","text":"    @voiceargs (b=>(use_max_speed=true), c) function f(a, b::String, c::String, d)\n        #(...)\n        return\n    end","category":"page"},{"location":"usage/","page":"Usage","title":"Usage","text":"    @enum TypeMode words formula\n    @voiceargs (mode=>(valid_input_auto=true), token=>(model=MODELNAME.TYPE.EN_US, vararg_timeout=2.0)) function type_tokens(mode::TypeMode, tokens::String...)\n        #(...)\n        return\n    end","category":"page"},{"location":"usage/","page":"Usage","title":"Usage","text":"Detailed information on @voiceargs is found in the High-level API reference.","category":"page"},{"location":"usage/","page":"Usage","title":"Usage","text":"While contributions to the JustSayIt command modules are very much encouraged, it is possible to quickly define and use custom @voiceargs functions thanks to the API of JustSayIt (JustSayIt.API). It is illustrated in this example. More information on the JustSayIt API is given in the High-level API reference.","category":"page"},{"location":"usage/","page":"Usage","title":"Usage","text":"Note that the JustSayIt application config folder (e.g., ~/.config/JustSayIt on Unix systems) is an easily accessible storage for scripts to start JustSayIt and/or for custom command functions: @include_config permits to conveniently include files from this folder.","category":"page"},{"location":"examples/#Examples","page":"...","title":"Examples","text":"","category":"section"},{"location":"examples/","page":"...","title":"...","text":"Pages = [\"examples/config_custom_function.md\"]","category":"page"},{"location":"examples/config_custom_function/#Quick-definition-and-usage-of-custom-function","page":"Quick definition and usage of custom function","title":"Quick definition and usage of custom function","text":"","category":"section"},{"location":"examples/config_custom_function/","page":"Quick definition and usage of custom function","title":"Quick definition and usage of custom function","text":"This example shows how one can","category":"page"},{"location":"examples/config_custom_function/","page":"Quick definition and usage of custom function","title":"Quick definition and usage of custom function","text":"program a weather forecast search function (weather),\ndefine a command name to function mapping, and then\nstart JustSayIt using these customly defined commands.","category":"page"},{"location":"examples/config_custom_function/","page":"Quick definition and usage of custom function","title":"Quick definition and usage of custom function","text":"The command weather programmed here allows to find out how the weather is today or tomorrow - just say \"weather today\" or \"weather tomorrow\". Furthermore, if you say \"help weather\", it will show in the Julia REPL the function documentation written here. To run this example, type in the Julia REPL include(\"path-to-file\") or simply copy-paste the code below inside (the corresponding file can be found here).","category":"page"},{"location":"examples/config_custom_function/","page":"Quick definition and usage of custom function","title":"Quick definition and usage of custom function","text":"Main.mdinclude(joinpath(Main.EXAMPLEROOT, \"config_custom_function.jl\"))","category":"page"},{"location":"#[JustSayIt.jl](https://github.com/omlins/JustSayIt.jl)-[![Star-on-GitHub](https://img.shields.io/github/stars/omlins/JustSayIt.jl.svg)](https://github.com/omlins/JustSayIt.jl/stargazers)","page":"Introduction and Quick Start","title":"JustSayIt.jl (Image: Star on GitHub)","text":"","category":"section"},{"location":"","page":"Introduction and Quick Start","title":"Introduction and Quick Start","text":"JustSayIt enables offline, low latency, highly accurate and secure speech to command translation on Linux, MacOS and Windows and is usable as software or high-level API. It implements a novel algorithm for high performance context dependent recognition of spoken commands which leverages the Vosk Speech Recognition Toolkit. Single word commands' latency (referring to the time elapsed between a command is spoken and executed) can be little as 5 miliseconds and does usually not exceed 30 miliseconds (measured on a regular notebook).","category":"page"},{"location":"","page":"Introduction and Quick Start","title":"Introduction and Quick Start","text":"Furthermore, JustSayIt provides an unprecedented highly generic extension to the Julia programming language which allows to declare arguments in standard function definitions to be obtainable by voice. For such functions, JustSayIt automatically generates a wrapper method that takes care of the complexity of retrieving the arguments from the speakers voice, including interpretation and conversion of the voice arguments to potentially any data type. JustSayIt commands are implemented with such voice argument functions, triggered by a user definable mapping of command names to functions. As a result, it empowers programmers without any knowledge of speech recognition to quickly write new commands that take their arguments from the speakers voice. JustSayIt is ideally suited for development by the world-wide open source community.","category":"page"},{"location":"","page":"Introduction and Quick Start","title":"Introduction and Quick Start","text":"JustSayIt unites the advantages of Julia and Python: it leverages Julia's performance and metaprogramming capabilities and Python's larger ecosystem where no suitable Julia package is found - PyCall.jl makes calling Python packages from Julia trivial. JustSayIt embraces the vision \"Why choose between Julia or Python? - Use both!\".","category":"page"},{"location":"","page":"Introduction and Quick Start","title":"Introduction and Quick Start","text":"Finally, JustSayIt puts a small load on the CPU, using only one core, and can therefore run continuously without harming the computer usage experience.","category":"page"},{"location":"#Quick-start","page":"Introduction and Quick Start","title":"Quick start","text":"","category":"section"},{"location":"","page":"Introduction and Quick Start","title":"Introduction and Quick Start","text":"1. Connect your best microphone (a good recording quality is key to a great voice control experience!)","category":"page"},{"location":"","page":"Introduction and Quick Start","title":"Introduction and Quick Start","text":"2. Install Julia if you do not have it yet.","category":"page"},{"location":"","page":"Introduction and Quick Start","title":"Introduction and Quick Start","text":"3. Execute the following in your shell to install and run JustSayIt:","category":"page"},{"location":"","page":"Introduction and Quick Start","title":"Introduction and Quick Start","text":"$> julia\njulia> ]\n  pkg> add JustSayIt\n  pkg> <backspace button>\njulia> using JustSayIt\njulia> start()","category":"page"},{"location":"","page":"Introduction and Quick Start","title":"Introduction and Quick Start","text":"4. Say \"help commands\" and then, e.g., \"help type\".","category":"page"},{"location":"","page":"Introduction and Quick Start","title":"Introduction and Quick Start","text":"5. Try some commands and then look through the rest of the documentation!","category":"page"},{"location":"#Dependencies","page":"Introduction and Quick Start","title":"Dependencies","text":"","category":"section"},{"location":"","page":"Introduction and Quick Start","title":"Introduction and Quick Start","text":"JustSayIt's primary dependencies are vosk, sounddevice, pynput, PyCall.jl, Conda.jl and MacroTools.jl.","category":"page"},{"location":"#Support-for-Linux,-MacOS-and-Windows","page":"Introduction and Quick Start","title":"Support for Linux, MacOS and Windows","text":"","category":"section"},{"location":"","page":"Introduction and Quick Start","title":"Introduction and Quick Start","text":"JustSayIt is programmed in a highly portable manner relying exclusively on portable Julia and Python modules (see Dependencies).","category":"page"},{"location":"#Your-contributions","page":"Introduction and Quick Start","title":"Your contributions","text":"","category":"section"},{"location":"","page":"Introduction and Quick Start","title":"Introduction and Quick Start","text":"This project needs your contribution! There are a lot of commands for all different kind of operations to be programmed! Note that pull request should always address a significant issue in its completeness and new commands should be generic enough to be of interest for others. Please open an issue to discuss the addition of new features beforehand.","category":"page"},{"location":"#Contributors","page":"Introduction and Quick Start","title":"Contributors","text":"","category":"section"},{"location":"","page":"Introduction and Quick Start","title":"Introduction and Quick Start","text":"The principal contributors to JustSayIt.jl are (ordered by the significance of the relative contributions):","category":"page"},{"location":"","page":"Introduction and Quick Start","title":"Introduction and Quick Start","text":"Dr. Samuel Omlin (@omlins), CSCS - Swiss National Supercomputing Centre, ETH Zurich","category":"page"},{"location":"software/","page":"Software reference","title":"Software reference","text":"CurrentModule = JustSayIt","category":"page"},{"location":"software/#Software-reference","page":"Software reference","title":"Software reference","text":"","category":"section"},{"location":"software/","page":"Software reference","title":"Software reference","text":"This is the official Software reference of JustSayIt. Note that it can also be queried interactively from the Julia REPL using the help mode:","category":"page"},{"location":"software/","page":"Software reference","title":"Software reference","text":"julia> using JustSayIt\njulia>?\nhelp?> JustSayIt","category":"page"},{"location":"software/#Functions-to-configure-and-start-JustSayIt","page":"Software reference","title":"Functions to configure and start JustSayIt","text":"","category":"section"},{"location":"software/#Index","page":"Software reference","title":"Index","text":"","category":"section"},{"location":"software/","page":"Software reference","title":"Software reference","text":"JustSayIt.start\nJustSayIt.@include_config","category":"page"},{"location":"software/#Documentation","page":"Software reference","title":"Documentation","text":"","category":"section"},{"location":"software/","page":"Software reference","title":"Software reference","text":"start\n@include_config","category":"page"},{"location":"software/#JustSayIt.start","page":"Software reference","title":"JustSayIt.start","text":"start()\nstart(<keyword arguments>)\n\nStart offline, low latency, highly accurate and secure speech to command translation.\n\nnote: NOTE: Support for German and Spanish deactivated\nSupport for German and Spanish is deactivated due to an unresolved issue with the underlying Vosk Speech Recognition Toolkit: https://github.com/alphacep/vosk-api/issues/1017\n\nKeyword arguments\n\ndefault_language::String=\"en-us\": the default language, which is used for the command names, for the voice arguments and for typing when no other language is specified (noted with its IETF langauge tag https://en.wikipedia.org/wiki/IETFlanguagetag). Currently supported are: english-US (\"en-us\"), German (\"de\"), French (\"fr\") and Spanish (\"es\").\ntype_languages::String|AbstractArray{String}=default_language: the languages used for typing, where the first is the default type language (noted with its IETF langauge tag https://en.wikipedia.org/wiki/IETFlanguagetag). Currently supported are: english-US (\"en-us\"), German (\"de\"), French (\"fr\") and Spanish (\"es\"). Type ?Keyboard.type for information about typing or say \"help type\" after having started JustSayIt.\ncommands::Dict{String, <:Any}=DEFAULT_COMMANDS[default_language]: the commands to be recognized with their mapping to a function or to a keyboard key or shortcut or a sequence of any of those.\nsubset::AbstractArray{String}=nothing: a subset of the commands to be recognised and executed (instead of the complete commands list).\nmax_speed_subset::AbstractArray{String}=nothing: a subset of the commands for which the command names (first word of a command) are to be recognised with maxium speed rather than with maximum accuracy. Forcing maximum speed is usually desired for single word commands that map to functions or keyboard shortcuts that should trigger immediate actions as, e.g., mouse clicks or page up/down (in general, actions that do not modify content and can therefore safely be triggered at maximum speed). Note that forcing maximum speed means not to wait for a certain amount of silence after the end of a command as normally done for the full confirmation of a recognition. As a result, it enables a minimal latency between the saying of a command name and its execution. Note that it is usually possible to define very distinctive command names, which allow for a safe command name to shortcut mapping at maximum speed (to be tested case by case).\n\nnote: Advanced\nmodeldirs::Dict{String, String}: the directories where the unziped speech recognition models to be used are located. If modeldirs is not set, then it is automatically defined according to the default_language and type_languages set. Models are downloadable from here: https://alphacephei.com/vosk/models\nnoises::Dict{String, <:AbstractArray{String}}=DEFAULT_NOISES: for each model, an array of strings with noises (tokens that are to be ignored in the speech as, e.g., \"huh\").\naudio_input_cmd::Cmd=nothing: a command that returns an audio stream to replace the default audio recorder. The audio stream must fullfill the following properties: samplerate=44100, channels=1 and format=Int16 (signed 16-bit integer).\n\nSubmodules for command name to function mapping\n\nHelp\nKeyboard\nMouse\nEmail\nInternet\n\nTo see a description of a submodule, type ?<modulename>.\n\nExamples\n\nDefine default_language (also used for typing if type_languages is not set)\n\n# Set command and type language to french:\nusing JustSayIt\nstart(default_language=\"fr\")\n\nDefine default_language and type_languages\n\n# Set command language to french and type languages to french and spanish:\nusing JustSayIt\nstart(default_language=\"fr\", type_languages=[\"fr\",\"es\"])\n\nDefine subset\n\n# Listen only to the commands \"help\" and \"type\".\nusing JustSayIt\nstart(subset=[\"help\", \"type\"])\n\nDefine custom commands - functions, keyboard shortcuts and sequences of those - and a max_speed_subset\n\nusing JustSayIt\ncommands = Dict(\"help\"      => Help.help,\n                \"type\"      => Keyboard.type,\n                \"ma\"        => Mouse.click_left,\n                \"select\"    => Mouse.press_left,\n                \"okay\"      => Mouse.release_left,\n                \"middle\"    => Mouse.click_middle,\n                \"right\"     => Mouse.click_right,\n                \"double\"    => Mouse.click_double,\n                \"triple\"    => Mouse.click_triple,\n                \"copy\"      => (Key.ctrl, 'c'),\n                \"cut\"       => (Key.ctrl, 'x'),\n                \"paste\"     => (Key.ctrl, 'v'),\n                \"undo\"      => (Key.ctrl, 'z'),\n                \"redo\"      => (Key.ctrl, Key.shift, 'z'),\n                \"upwards\"   => Key.page_up,\n                \"downwards\" => Key.page_down,\n                \"take\"      => [Mouse.click_double, (Key.ctrl, 'c')],\n                \"replace\"   => [Mouse.click_double, (Key.ctrl, 'v')],\n                );\nstart(commands=commands, max_speed_subset=[\"ma\", \"select\", \"okay\", \"middle\", \"right\", \"double\", \"triple\", \"copy\", \"upwards\", \"downwards\", \"take\"])\n\nDefine custom modeldirs\n\nusing JustSayIt\nmodeldirs = Dict(MODELNAME.DEFAULT.EN_US => \"/home/runner/mymodels/vosk-model-small-en-us-0.15\",\n                 MODELNAME.TYPE.EN_US    => \"/home/runner/mymodels/vosk-model-en-us-daanzu-20200905\",\n                 MODELNAME.DEFAULT.FR    => \"/home/runner/mymodels/vosk-model-small-fr-0.22\",\n                 MODELNAME.TYPE.FR       => \"/home/runner/mymodels/vosk-model-fr-0.6-linto-2.2.0\")\nstart(modeldirs=modeldirs, default_language=\"en-us\", type_languages=[\"en-us\",\"fr\"])\n\nDefine audio_input_cmd\n\n# Use a custom command to create the audio input stream - instead of the default recorder (the rate, channels and format must not be chosen different!)\nusing JustSayIt\naudio_input_cmd = `arecord --rate=44100 --channels=1 --format=S16_LE`\nstart(audio_input_cmd=audio_input_cmd)\n\nDefault commands\n\nde    => Dict{String, Function}(\"email\" => JustSayIt.Email.email, \"internet\" => JustSayIt.Internet.internet, \"hilfe\" => JustSayIt.Help.help, \"schreibe\" => JustSayIt.Keyboard.type)\nen-us => Dict{String, Function}(\"help\" => JustSayIt.Help.help, \"type\" => JustSayIt.Keyboard.type, \"email\" => JustSayIt.Email.email, \"internet\" => JustSayIt.Internet.internet)\nes    => Dict{String, Function}(\"ayuda\" => JustSayIt.Help.help, \"escribe\" => JustSayIt.Keyboard.type, \"internet\" => JustSayIt.Internet.internet, \"email\" => JustSayIt.Email.email)\nfr    => Dict{String, Function}(\"Ã©crire\" => JustSayIt.Keyboard.type, \"aide\" => JustSayIt.Help.help, \"internet\" => JustSayIt.Internet.internet, \"email\" => JustSayIt.Email.email)\n\nDefault model directories\n\ndefault-de    => /home/runner/.local/share/JustSayIt/models/vosk-model-small-de-0.15\ndefault-en-us => /home/runner/.local/share/JustSayIt/models/vosk-model-small-en-us-0.15\ndefault-es    => /home/runner/.local/share/JustSayIt/models/vosk-model-small-es-0.22\ndefault-fr    => /home/runner/.local/share/JustSayIt/models/vosk-model-small-fr-0.22\ntype-de       => /home/runner/.local/share/JustSayIt/models/vosk-model-de-0.21\ntype-en-us    => /home/runner/.local/share/JustSayIt/models/vosk-model-en-us-daanzu-20200905\ntype-es       => \ntype-fr       => /home/runner/.local/share/JustSayIt/models/vosk-model-fr-0.22\n\nDefault noises\n\ndefault-de    => String[]\ndefault-en-us => [\"huh\"]\ndefault-es    => String[]\ndefault-fr    => [\"hum\"]\ntype-de       => String[]\ntype-en-us    => [\"huh\"]\ntype-es       => String[]\ntype-fr       => [\"hum\"]\n\n\n\n\n\n","category":"function"},{"location":"software/#JustSayIt.@include_config","page":"Software reference","title":"JustSayIt.@include_config","text":"@include_config(path::AbstractString)\n\nPrefix path with the JustSayIt application config path and then call include(path). If path is an absolut path, then call include with path unmodified.\n\nnote: NOTE: JustSayIt application config\nThe content of the JustSayIt application config folder is not evaluated within JustSayIt. The folder's single purpose is to provide an easily accessible storage for scripts to start JustSayIt and/or for custom command functions: @include_config permits to conveniently include files from this folder (for details about the Julia built-in include type ?include). Your JustSayIt application config path on this system is: /home/runner/.config/JustSayIt\n\n\n\n\n\n","category":"macro"},{"location":"software/#Submodules-for-command-name-to-function-mapping","page":"Software reference","title":"Submodules for command name to function mapping","text":"","category":"section"},{"location":"software/#Index-2","page":"Software reference","title":"Index","text":"","category":"section"},{"location":"software/","page":"Software reference","title":"Software reference","text":"JustSayIt.Help\nJustSayIt.Keyboard\nJustSayIt.Mouse\nJustSayIt.Email\nJustSayIt.Internet","category":"page"},{"location":"software/#Documentation-2","page":"Software reference","title":"Documentation","text":"","category":"section"},{"location":"software/","page":"Software reference","title":"Software reference","text":"Help\nKeyboard\nMouse\nEmail\nInternet","category":"page"},{"location":"software/#JustSayIt.Help","page":"Software reference","title":"JustSayIt.Help","text":"Module Help\n\nProvides functions for displaying help about the commands during speech recognition.\n\nFunctions\n\nHelp.help\n\nTo see a description of a function type ?<functionname>.\n\n\n\n\n\n","category":"module"},{"location":"software/#JustSayIt.Keyboard","page":"Software reference","title":"JustSayIt.Keyboard","text":"Module Keyboard\n\nProvides functions for controlling the keyboard by voice.\n\nFunctions\n\nTyping\n\nKeyboard.type\n\nTo see a description of a function type ?<functionname>.\n\nSee also: Mouse\n\n\n\n\n\n","category":"module"},{"location":"software/#JustSayIt.Mouse","page":"Software reference","title":"JustSayIt.Mouse","text":"Module Mouse\n\nProvides functions for controlling the mouse by voice.\n\nFunctions\n\nButton control\n\nMouse.click_left\nMouse.click_middle\nMouse.click_right\nMouse.press_left\nMouse.release_left\nMouse.click_double\nMouse.click_triple\n\nTo see a description of a function type ?<functionname>.\n\nSee also: Keyboard\n\n\n\n\n\n","category":"module"},{"location":"software/#JustSayIt.Email","page":"Software reference","title":"JustSayIt.Email","text":"Module Email\n\nProvides functions for operations in an Email client.\n\nFunctions\n\nManage e-mails\n\nEmail.email\n\nTo see a description of a function type ?<functionname>.\n\nSee also: Internet\n\n\n\n\n\n","category":"module"},{"location":"software/#JustSayIt.Internet","page":"Software reference","title":"JustSayIt.Internet","text":"Module Internet\n\nProvides functions for navigating in the internet by voice.\n\nFunctions\n\nNavigate the internet\n\nInternet.internet\n\nTo see a description of a function type ?<functionname>.\n\nSee also: Email\n\n\n\n\n\n","category":"module"},{"location":"software/#Functions-of-[Help](@ref)","page":"Software reference","title":"Functions of Help","text":"","category":"section"},{"location":"software/#Index-3","page":"Software reference","title":"Index","text":"","category":"section"},{"location":"software/","page":"Software reference","title":"Software reference","text":"Modules = [JustSayIt.Help]\nOrder = [:function]","category":"page"},{"location":"software/#Documentation-3","page":"Software reference","title":"Documentation","text":"","category":"section"},{"location":"software/","page":"Software reference","title":"Software reference","text":"Modules = [JustSayIt.Help]\nOrder = [:function]","category":"page"},{"location":"software/#JustSayIt.Help.help-Tuple{}","page":"Software reference","title":"JustSayIt.Help.help","text":"Show help for your commands or a spoken command or module.\n\n\n\n\n\n","category":"method"},{"location":"software/#Functions-of-[Keyboard](@ref)","page":"Software reference","title":"Functions of Keyboard","text":"","category":"section"},{"location":"software/#Index-4","page":"Software reference","title":"Index","text":"","category":"section"},{"location":"software/","page":"Software reference","title":"Software reference","text":"JustSayIt.Keyboard.type","category":"page"},{"location":"software/#Documentation-4","page":"Software reference","title":"Documentation","text":"","category":"section"},{"location":"software/","page":"Software reference","title":"Software reference","text":"Keyboard.type","category":"page"},{"location":"software/#JustSayIt.Keyboard.type","page":"Software reference","title":"JustSayIt.Keyboard.type","text":"type `text` | `words` | `letters` | `digits`\n\nType in one of the following modes:\n\ntext\nwords\nletters\ndigits\n\nEach of the modes supports a set of keywords which can trigger some immediate action or modify the handling of subsequent speech input. It is important to note that the speech is analysed in word groups which are naturally delimited by longer silences; and keywords are only considered as such if their word group does not contain anything else then keywords. This allows to determine whether a word that is recognised as a keyword should trigger some action or be typed instead.\n\nKeywords\n\n\"terminus\": end typing.\n\"language\": change typing language.\n\"undo\": undo typing of last word group.\n\"redo\": redo typing of last word group.\n\"uppercase\": type the first word of the next word group uppercase (automatic in text mode after '.', '!' and '?').\n\"lowercase\": type the first word of the next word group lowercase (default).\n\"letters\": interpret the next word group as letters (interprets in addition 'space' as ' ').\n\"digits\": interpret the next word group as digits (interprets in addition 'dot' as '.' and 'space' as ' ').\n\"point\": type '.'.\n\"comma\": type ','.\n\"colon\": type ':'.\n\"semicolon\": type ';'.\n\"exclamation\": type '!'.\n\"interrogation\": type '?'.\n\"paragraph\": start a new paragraph.\n\nModes\n\ntext\n\nType any kind of text supported by the keywords, including spelled letters, digits and punctuation marks. All keywords are supported.\n\nwords\n\nType words only (upper and lower case). Supported keywords are:\n\n\"terminus\"\n\"undo\"\n\"redo\"\n\"uppercase\"\n\"lowercase\"\n\nletters\n\nType letters only. Supported keywords are:\n\n\"terminus\"\n\"undo\"\n\"redo\"\n\"space\"\n\ndigits\n\nType digits only. Supported keywords are:\n\n\"terminus\"\n\"undo\"\n\"redo\"\n\"space\"\n\"dot\"\n\"comma\"\n\n\n\n\n\n","category":"function"},{"location":"software/#Functions-of-[Mouse](@ref)","page":"Software reference","title":"Functions of Mouse","text":"","category":"section"},{"location":"software/#Index-5","page":"Software reference","title":"Index","text":"","category":"section"},{"location":"software/","page":"Software reference","title":"Software reference","text":"Modules = [JustSayIt.Mouse]\nOrder = [:function]","category":"page"},{"location":"software/#Documentation-5","page":"Software reference","title":"Documentation","text":"","category":"section"},{"location":"software/","page":"Software reference","title":"Software reference","text":"Modules = [JustSayIt.Mouse]\nOrder = [:function]","category":"page"},{"location":"software/#JustSayIt.Mouse.click_double-Tuple{}","page":"Software reference","title":"JustSayIt.Mouse.click_double","text":"Doubleclick left mouse button.\n\n\n\n\n\n","category":"method"},{"location":"software/#JustSayIt.Mouse.click_left-Tuple{}","page":"Software reference","title":"JustSayIt.Mouse.click_left","text":"Click left mouse button.\n\n\n\n\n\n","category":"method"},{"location":"software/#JustSayIt.Mouse.click_middle-Tuple{}","page":"Software reference","title":"JustSayIt.Mouse.click_middle","text":"Click middle mouse button.\n\n\n\n\n\n","category":"method"},{"location":"software/#JustSayIt.Mouse.click_right-Tuple{}","page":"Software reference","title":"JustSayIt.Mouse.click_right","text":"Click right mouse button.\n\n\n\n\n\n","category":"method"},{"location":"software/#JustSayIt.Mouse.click_triple-Tuple{}","page":"Software reference","title":"JustSayIt.Mouse.click_triple","text":"Trippleclick left mouse button.\n\n\n\n\n\n","category":"method"},{"location":"software/#JustSayIt.Mouse.press_left-Tuple{}","page":"Software reference","title":"JustSayIt.Mouse.press_left","text":"Press and hold left mouse button.\n\n\n\n\n\n","category":"method"},{"location":"software/#JustSayIt.Mouse.release_left-Tuple{}","page":"Software reference","title":"JustSayIt.Mouse.release_left","text":"Release left mouse button.\n\n\n\n\n\n","category":"method"},{"location":"software/#Functions-of-[Email](@ref)","page":"Software reference","title":"Functions of Email","text":"","category":"section"},{"location":"software/#Index-6","page":"Software reference","title":"Index","text":"","category":"section"},{"location":"software/","page":"Software reference","title":"Software reference","text":"JustSayIt.Email.email","category":"page"},{"location":"software/#Documentation-6","page":"Software reference","title":"Documentation","text":"","category":"section"},{"location":"software/","page":"Software reference","title":"Software reference","text":"Email.email","category":"page"},{"location":"software/#JustSayIt.Email.email","page":"Software reference","title":"JustSayIt.Email.email","text":"email `inbox` | `outbox`\n\nManage e-mails, performing one of the following actions:\n\nopen inbox\nopen outbox\n\n\n\n\n\n","category":"function"},{"location":"software/#Functions-of-[Internet](@ref)","page":"Software reference","title":"Functions of Internet","text":"","category":"section"},{"location":"software/#Index-7","page":"Software reference","title":"Index","text":"","category":"section"},{"location":"software/","page":"Software reference","title":"Software reference","text":"JustSayIt.Internet.internet","category":"page"},{"location":"software/#Documentation-7","page":"Software reference","title":"Documentation","text":"","category":"section"},{"location":"software/","page":"Software reference","title":"Software reference","text":"Internet.internet","category":"page"},{"location":"software/#JustSayIt.Internet.internet","page":"Software reference","title":"JustSayIt.Internet.internet","text":"internet `search`\n\nNavigate the internet, performing one of the following actions:\n\nsearch: start search engine, enter \"type text\" mode to obtain search words from speech and then trigger the search when the keyword \"search\" is spoken.\n\n\n\n\n\n","category":"function"}]
}
